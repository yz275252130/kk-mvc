<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<beans:description>SpringSecurity</beans:description>

	<beans:bean id="customWebInvocationPrivilegeEvaluator"
		class="org.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluator">
		<beans:constructor-arg ref="baseFilter" />
	</beans:bean>

	<http pattern="/sessiontimeout" security="none" />
	<http pattern="/securityException/security" security="none" />
	<http pattern="/baseDictionary/listData.json" security="none" />
	<http pattern="/base/common/forbiddenDialog.jsp" security="none" />
	<http pattern="/base/common/forbiddenDialog" security="none" />
	<http pattern="/upload/app/" security="none" />
	<http pattern="/assets/**" security="none" />
	<http pattern="/css/**" security="none" />
	<http pattern="/js/**" security="none" />
	<http pattern="/fonts/**" security="none" />
	<http pattern="/img/**" security="none" />
	<http pattern="/**/*.css" security="none" />
	<http pattern="/**/*.ico" security="none" />
	<http pattern="/**/*.js" security="none" />
	<http pattern="/**/*.jpg" security="none" />
	<http pattern="/**/*.png" security="none" />
	<http pattern="/**/*.gif" security="none" />
	<http pattern="/**/*.pdf" security="none" />
	<http pattern="/**/*.xls" security="none" />
	<http pattern="/**/*.txt" security="none" />
	<http pattern="/**/*.xml" security="none" />
	<http pattern="/**/*.woff" security="none" />
	<http pattern="/**/*.woff2" security="none" />
	<http pattern="/**/*.ttf" security="none" />
	<http pattern="/**/*.html" security="none" />
	<http pattern="/baseUser/bfChangePassword" security="none" />
	<http pattern="/baseUser/changePassword" security="none" />
	<http pattern="/baseUser/bfUserEdit" security="none" />
	<http pattern="/baseUser/userEdit" security="none" />
	<http pattern="/baseUser/editPhoto" security="none" />
	<http pattern="/baseUser/editShowing" security="none" />
	<http pattern="/user/**" security="none" />
	<http pattern="/login" security="none" />
	<http pattern="/login.jsp" security="none" />
	<!-- http安全配置 -->
	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/**" access="isAuthenticated()" /> 

		<!-- authentication-success-handler-ref 成功之后处理类 default-target-url="/mainfream/index_index.jsp" -->
		<form-login login-page="/login"
			authentication-failure-url="/login?error=0"
			authentication-success-handler-ref="baseSuccessHandler" />
		<!-- 尝试访问没有权限的页面时跳转的页面 -->
		<access-denied-handler error-page="/securityException/security" />
		<!-- <access-denied-handler ref="deniedHandler" /> -->

		<logout invalidate-session="true" logout-success-url="/login?error=1" />

		<session-management invalid-session-url="/sessiontimeout?error=2"
			session-fixation-protection="none">
			<concurrency-control max-sessions="1"
				expired-url="/sessiontimeout?error=3" />
		</session-management>

		<!-- 增加一个filter，这点与Acegi是不一样的，不能修改默认的filter了，这个filter位于FILTER_SECURITY_INTERCEPTOR之前 -->
		<custom-filter ref="baseFilter" before="FILTER_SECURITY_INTERCEPTOR" />
	</http>

	<!-- 一个自定义的filter，必须包含authenticationManager,accessDecisionManager,securityMetadataSource三个属性， 
		我们的所有控制将在这三个类中实现，解释详见具体配置 -->
	<beans:bean id="baseFilter"
		class="com.yz.base.security.BaseFilterSecurityInterceptor">
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="accessDecisionManager" ref="accessDecisionManagerBean" />
		<beans:property name="securityMetadataSource" ref="securityMetadataSource" />
		<beans:property name="rejectPublicInvocations" value="false"></beans:property>
	</beans:bean>

	<!-- 用户的密码加密或解密 -->
	<beans:bean id="passwordEncoder"
		class="org.springframework.security.authentication.encoding.Md5PasswordEncoder">
	</beans:bean>


	<!-- 验证配置 ， 认证管理器，实现用户认证的入口，主要实现UserDetailsService接口即可 -->
	<authentication-manager alias="authenticationManager"
		erase-credentials="false">
		<authentication-provider ref="daoProvider" />
	</authentication-manager>

	<!-- 增加daoProvider配置 -->
	<beans:bean id="daoProvider"
		class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<beans:property name="userDetailsService" ref="userDetailsService" />
		<beans:property name="passwordEncoder" ref="passwordEncoder" />
		<beans:property name="saltSource" ref="saltSource" />
		<!-- 此属性为false，是指不忽略用户不存在异常 -->
		<beans:property name="hideUserNotFoundExceptions"
			value="false"></beans:property>
	</beans:bean>
	<beans:bean id="saltSource"
		class="org.springframework.security.authentication.dao.ReflectionSaltSource">
		<beans:property name="userPropertyToUse" value="userCode" />
	</beans:bean>

	<!-- 项目实现的用户查询服务,将用户信息查询出来 -->
	<beans:bean id="userDetailsService"
		class="com.yz.base.security.BaseUserDetailsServiceImpl">
		<beans:property name="messageSource" ref="messageSource"></beans:property>
	</beans:bean>

	<!-- 访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源 -->
	<beans:bean id="accessDecisionManagerBean"
		class="com.yz.base.security.BaseAccessDecisionManager"></beans:bean>

	<!-- 资源源数据定义，将所有的资源和权限对应关系建立起来，即定义某一资源可以被哪些角色访问 -->
	<beans:bean id="securityMetadataSource" class="com.yz.base.security.FilterInvocationSecurityMetadataSourceImpl" init-method="loadResourceDefine">
	</beans:bean>

	<!-- 定义国际化 -->
	<beans:bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<beans:property name="basename" value="classpath:message" />
		<beans:property name="defaultEncoding" value="UTF-8" />
		<beans:property name="useCodeAsDefaultMessage" value="true" />
	</beans:bean>
	<beans:bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver">
	</beans:bean>

	<!-- 成功之后处理类 该类继承springsecurity 成功后的处理类 处理一些自己的操作后再交给 springsecurity成功后的处理类 
		跳转 -->
	<beans:bean id="baseSuccessHandler"
		class="com.yz.base.security.BaseAuthenticationSuccessHandler">
		<beans:property name="defaultTargetUrl" value="/index"></beans:property>
		<beans:property name="alwaysUseDefaultTargetUrl" value="false"></beans:property>
	</beans:bean>

</beans:beans>
